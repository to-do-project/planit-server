server:
  port: ${secrets.SERVER_PORT}

spring:
  application:
    name: ${secrets.APPLICATION_NAME}

  datasource:
    driver-class-name: ${secrets.RDS_DRIVER_CLASS}
    url: ${secrets.RDS_HOST}
    username: ${secrets.RDS_USERNAME}
    password: ${secrets.RDS_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5Dialect
    properties:
      hibernate:
        format_sql: true #출력되는 쿼리를 가독성 있게 변경
        use_sql_comments: true #실행하는 쿼리에 대한 정보를 보여준다 (엔티티, 쿼리 종류 등)

  redis:
    host: ${secrets.REDIS_HOST}
    port: ${secrets.REDIS_PORT}

  mail:
    host: ${secrets.MAIL_HOST}
    port: ${secrets.MAIL_PORT}
    username: ${secrets.MAIL_USERNAME}
    password: ${secrets.MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  mvc:
    pathmatch:
      matching-strategy: ${secrets.MVC_MATCH_STRATEGY}


jwt:
  secret-key: ${secrets.JWT_SECRET_KEY}
  access-token-expire-time: ${secrets.ACCESS_TOKEN_EXPIRE_TIME}
  refresh-token-expire-time: ${secrets.REFRESH_TOKEN_EXPIRE_TIME}
  refresh-token-reissue-time: ${secrets.REFRESH_TOKEN_REISSUE_TIME}
  access-token-header-name: ${secrets.ACCESS_TOKEN_HEADER_NAME}
  refresh-token-header-name: ${secrets.REFRESH_TOKEN_HEADER_NAME}
  user-id-header-name: ${secrets.USER_ID_HEADER_NAME}

fcm:
  key:
    path: firebase_service_key.json
    scope: ${secrets.FIREBASE_CREATE_SCOPED}
